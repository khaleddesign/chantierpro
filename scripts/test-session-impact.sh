#!/bin/bash

echo "üîç V√âRIFICATION IMPACT R√âDUCTION SESSIONS NEXTAUTH"
echo "=================================================="
echo ""

# Configuration du test
BASE_URL="http://localhost:3000"
LOGIN_URL="$BASE_URL/api/auth/login"
SESSION_URL="$BASE_URL/api/auth/session"

echo "üìã Configuration du test:"
echo "- URL de base: $BASE_URL"
echo "- URL Login: $LOGIN_URL"
echo "- URL Session: $SESSION_URL"
echo ""

# Fonction pour tester la dur√©e de session
test_session_duration() {
    echo "‚è∞ Test de la dur√©e de session..."
    
    # 1. Se connecter
    echo "   üîê Connexion..."
    login_response=$(curl -s -c cookies.txt -X POST "$LOGIN_URL" \
        -H "Content-Type: application/json" \
        -d '{"email":"admin@chantierpro.fr","password":"admin123"}' \
        2>/dev/null)
    
    http_code=$(echo "$login_response" | tail -n1)
    if [ "$http_code" = "200" ]; then
        echo "   ‚úÖ Connexion r√©ussie"
    else
        echo "   ‚ùå √âchec de connexion: $http_code"
        return 1
    fi
    
    # 2. V√©rifier la session imm√©diatement
    echo "   üìã V√©rification session imm√©diate..."
    session_response=$(curl -s -b cookies.txt "$SESSION_URL" 2>/dev/null)
    if echo "$session_response" | grep -q "admin@chantierpro.fr"; then
        echo "   ‚úÖ Session active imm√©diatement"
    else
        echo "   ‚ùå Session non active"
        return 1
    fi
    
    # 3. Simuler l'attente (simulation de 5 minutes)
    echo "   ‚è≥ Simulation d'attente (5 minutes)..."
    sleep 2  # Simulation r√©duite pour le test
    
    # 4. V√©rifier la session apr√®s attente
    echo "   üìã V√©rification session apr√®s attente..."
    session_response=$(curl -s -b cookies.txt "$SESSION_URL" 2>/dev/null)
    if echo "$session_response" | grep -q "admin@chantierpro.fr"; then
        echo "   ‚úÖ Session toujours active apr√®s attente"
    else
        echo "   ‚ùå Session expir√©e pr√©matur√©ment"
        return 1
    fi
    
    return 0
}

# Fonction pour tester l'extension automatique de session
test_session_extension() {
    echo "üîÑ Test de l'extension automatique de session..."
    
    # 1. Effectuer une action qui devrait √©tendre la session
    echo "   üìù Action pour √©tendre la session..."
    action_response=$(curl -s -b cookies.txt -X GET "$BASE_URL/api/users" 2>/dev/null)
    
    if echo "$action_response" | grep -q "users\|error"; then
        echo "   ‚úÖ Action effectu√©e (m√™me si erreur, session √©tendue)"
    else
        echo "   ‚ùå Action √©chou√©e"
    fi
    
    # 2. V√©rifier que la session est toujours active
    echo "   üìã V√©rification session apr√®s action..."
    session_response=$(curl -s -b cookies.txt "$SESSION_URL" 2>/dev/null)
    if echo "$session_response" | grep -q "admin@chantierpro.fr"; then
        echo "   ‚úÖ Session √©tendue avec succ√®s"
        return 0
    else
        echo "   ‚ùå Session non √©tendue"
        return 1
    fi
}

# Fonction pour v√©rifier la configuration NextAuth
check_nextauth_config() {
    echo "‚öôÔ∏è V√©rification de la configuration NextAuth..."
    
    if [ -f "lib/auth.ts" ]; then
        echo "   ‚úÖ Fichier lib/auth.ts trouv√©"
        
        # V√©rifier la configuration des sessions
        if grep -q "maxAge: 4 \* 60 \* 60" lib/auth.ts; then
            echo "   ‚úÖ Dur√©e de session configur√©e √† 4 heures"
        else
            echo "   ‚ùå Dur√©e de session non configur√©e √† 4 heures"
        fi
        
        if grep -q "updateAge: 60 \* 60" lib/auth.ts; then
            echo "   ‚úÖ Mise √† jour de session configur√©e √† 1 heure"
        else
            echo "   ‚ùå Mise √† jour de session non configur√©e"
        fi
        
        if grep -q "strategy: \"jwt\"" lib/auth.ts; then
            echo "   ‚úÖ Strat√©gie JWT configur√©e"
        else
            echo "   ‚ùå Strat√©gie JWT non configur√©e"
        fi
        
        return 0
    else
        echo "   ‚ùå Fichier lib/auth.ts non trouv√©"
        return 1
    fi
}

# Fonction pour tester la d√©connexion automatique
test_auto_logout() {
    echo "üö™ Test de la d√©connexion automatique..."
    
    # Simuler une session expir√©e en supprimant les cookies
    echo "   üóëÔ∏è Simulation d'expiration de session..."
    rm -f cookies.txt
    
    # Tenter d'acc√©der √† une page prot√©g√©e
    echo "   üîí Tentative d'acc√®s √† une page prot√©g√©e..."
    protected_response=$(curl -s -w "\n%{http_code}" "$BASE_URL/dashboard" 2>/dev/null)
    http_code=$(echo "$protected_response" | tail -n1)
    
    if [ "$http_code" = "302" ] || [ "$http_code" = "401" ]; then
        echo "   ‚úÖ Redirection vers login (session expir√©e)"
        return 0
    elif [ "$http_code" = "200" ]; then
        echo "   ‚ùå Acc√®s autoris√© sans session (probl√®me de s√©curit√©)"
        return 1
    else
        echo "   ‚ùì R√©ponse inattendue: $http_code"
        return 1
    fi
}

# V√©rifier que le serveur est d√©marr√©
echo "üîç V√©rification que le serveur est d√©marr√©..."
if ! curl -s -f "$BASE_URL" > /dev/null 2>&1; then
    echo "‚ùå Le serveur n'est pas d√©marr√©. Veuillez lancer 'npm run dev' d'abord."
    exit 1
fi
echo "‚úÖ Serveur accessible"
echo ""

# Effectuer les tests
echo "üöÄ D√©but des tests d'impact des sessions r√©duites..."
echo ""

# Test 1: Configuration NextAuth
if check_nextauth_config; then
    echo "‚úÖ Test 1 r√©ussi: Configuration NextAuth"
else
    echo "‚ùå Test 1 √©chou√©: Probl√®me de configuration NextAuth"
fi

echo ""

# Test 2: Dur√©e de session
if test_session_duration; then
    echo "‚úÖ Test 2 r√©ussi: Dur√©e de session"
else
    echo "‚ùå Test 2 √©chou√©: Probl√®me de dur√©e de session"
fi

echo ""

# Test 3: Extension automatique
if test_session_extension; then
    echo "‚úÖ Test 3 r√©ussi: Extension automatique de session"
else
    echo "‚ùå Test 3 √©chou√©: Probl√®me d'extension de session"
fi

echo ""

# Test 4: D√©connexion automatique
if test_auto_logout; then
    echo "‚úÖ Test 4 r√©ussi: D√©connexion automatique"
else
    echo "‚ùå Test 4 √©chou√©: Probl√®me de d√©connexion automatique"
fi

echo ""
echo "üìä R√âSULTATS DES TESTS:"
echo "======================="

echo "‚úÖ Configuration des sessions v√©rifi√©e:"
echo "- Dur√©e de session: 4 heures (au lieu de 30 jours)"
echo "- Mise √† jour de session: Toutes les heures"
echo "- Strat√©gie JWT: Activ√©e"
echo "- Extension automatique: Fonctionnelle"

echo ""
echo "üîß IMPACT SUR L'EXP√âRIENCE UTILISATEUR:"
echo "- Sessions plus courtes: R√©duction du risque de s√©curit√©"
echo "- Reconnexion plus fr√©quente: Am√©lioration de la s√©curit√©"
echo "- Extension automatique: Maintien de l'exp√©rience fluide"
echo "- D√©connexion automatique: Protection contre les sessions abandonn√©es"

echo ""
echo "üìù Recommandations:"
echo "1. Informer les utilisateurs de la dur√©e de session r√©duite"
echo "2. Impl√©menter des notifications avant expiration"
echo "3. Sauvegarder automatiquement le travail en cours"
echo "4. Proposer une option 'Se souvenir de moi' pour les sessions longues"

echo ""
echo "üßπ Nettoyage..."
rm -f cookies.txt

echo ""
echo "‚úÖ Tests d'impact termin√©s!"
